--Calculate the total price of an order, including quantity, discounts, and additional charges (like tax or delivery fees).

CREATE OR REPLACE FUNCTION Calculate_Order_Total (
    f_order_id IN NUMBER
) RETURN NUMBER IS
    total_price NUMBER;
BEGIN
    SELECT SUM(od.Quantity * od.Price_Per_Unit)
    INTO total_price
    FROM Order_Details od
    WHERE od.Order_id = f_order_id;

    RETURN NVL(total_price, 0);
END;
/

--Calculate total revenue generated by an influencer based on product sales.

CREATE OR REPLACE FUNCTION Calculate_Influencer_Revenue (
    f_influencer_id IN NUMBER
) RETURN NUMBER IS
    influencer_revenue NUMBER;
BEGIN
    SELECT SUM(od.Quantity * od.Price_Per_Unit)
    INTO influencer_revenue
    FROM Order_Details od
    JOIN Products p ON od.Product_id = p.Product_id
    WHERE p.Influencer_id = f_influencer_id;

    RETURN NVL(influencer_revenue, 0);
END;
/

--Verify if a product is in stock before allowing an order to be placed.

CREATE OR REPLACE FUNCTION Check_Product_Availability (
    f_product_id IN NUMBER,
    f_quantity IN NUMBER
) RETURN VARCHAR2 IS
    available_stock NUMBER;
BEGIN
    SELECT Quantity_in_hand
    INTO available_stock
    FROM Products
    WHERE Product_id = f_product_id;

    IF available_stock >= f_quantity THEN
        RETURN 'Available';
    ELSE
        RETURN 'Out of Stock';
    END IF;
END;
/
